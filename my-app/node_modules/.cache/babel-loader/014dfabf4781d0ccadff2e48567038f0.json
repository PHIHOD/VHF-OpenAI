{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phili\\\\OneDrive\\\\Dokumenter\\\\VHF-OpenAI\\\\my-app\\\\src\\\\Comp\\\\dic.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dictaphone = () => {\n  _s();\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  if (transcript != \"\" && !listening) {\n    resetTranscript();\n  }\n\n  const [inputText, setInputText] = useState(\"\");\n\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2 italic text-gray-500 flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: listening ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-5\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-red-500 absolute \",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"20\",\n                      height: \"20\",\n                      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"8\",\n                        cy: \"8\",\n                        r: \"8\",\n                        fill: \"currentColor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 35,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 34,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"animate-ping text-red-500 absolute \",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"20\",\n                      height: \"20\",\n                      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"8\",\n                        cy: \"8\",\n                        r: \"8\",\n                        fill: \"currentColor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 45,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 44,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 21\n                }, this) : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-6\",\n                children: transcript\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                placeholder: \"Write your message ...\",\n                value: inputText,\n                onChange: e => setInputText(e.target.value),\n                className: \"border-none h-full w-full overflow-hidden focus:outline-none focus:placeholder-gray-400 text-gray-900 placeholder-gray-600 px-4 bg-gray-200 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute right-0 items-end inset-y-0 hidden sm:flex\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"inline-flex items-end justify-center rounded-md-none px-4 py-3 transition duration-100 ease-in-out text-white bg-neutral-600 hover:bg-neutral-400 focus:outline-none\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-semibold\",\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  viewBox: \"0 0 20 20\",\n                  fill: \"currentColor\",\n                  className: \"h-4 w-4 ml-2 transform rotate-90\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"inline-flex \\r w-full mt-4 items-center justify-center rounded-none px-4 py-3\\r active:bg-red-500 focus:ring focus:ring-red-300 transition duration-100 ease-in-out text-white bg-neutral-600 hover:bg-neutral-400 focus:outline-none\",\n        onMouseDown: () => {\n          resetTranscript();\n          SpeechRecognition.startListening({\n            continuous: true\n          });\n        },\n        onMouseUp: () => {\n          SpeechRecognition.stopListening();\n          setInputText(transcript);\n          resetTranscript();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          className: \"h-6 w-6 text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: \"2\",\n            d: \"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: listening ? \"Listening . . . \" : \"Press to talk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dictaphone, \"nF9juhY9BowVjSR9jVMd+n/DgTs=\", false, function () {\n  return [useSpeechRecognition];\n});\n\n_c = Dictaphone;\nexport default Dictaphone;\n/*\r\n<div>\r\n          <p>Microphone: {listening ? \"on\" : \"off\"}</p>\r\n          <p>Message: {transcript}</p>\r\n          <button onClick={SpeechRecognition.startListening}>Start</button>\r\n          <button onClick={SpeechRecognition.stopListening}>Stop</button>\r\n          <button onClick={resetTranscript}>Reset</button>\r\n        </div>*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictaphone\");","map":{"version":3,"sources":["C:/Users/phili/OneDrive/Dokumenter/VHF-OpenAI/my-app/src/Comp/dic.jsx"],"names":["React","useState","SpeechRecognition","useSpeechRecognition","Dictaphone","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","inputText","setInputText","e","target","value","startListening","continuous","stopListening"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,iBAAP,IACEC,oBADF,QAEO,0BAFP;;;AAIA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA;AAJI,MAKFL,oBAAoB,EALxB;;AAMA,MAAIE,UAAU,IAAI,EAAd,IAAoB,CAACC,SAAzB,EAAoC;AAClCC,IAAAA,eAAe;AAChB;;AACD,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;AAEA,MAAI,CAACO,gCAAL,EAAuC;AACrC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,gCAAf;AAAA,sCACE;AAAA,0BACGF,SAAS,gBACR;AAAK,kBAAA,SAAS,EAAC,MAAf;AAAA,0CACE;AAAM,oBAAA,SAAS,EAAC,wBAAhB;AAAA,2CACE;AAAK,sBAAA,KAAK,EAAC,IAAX;AAAgB,sBAAA,MAAM,EAAC,IAAvB;AAAA,6CACE;AACE,wBAAA,EAAE,EAAC,GADL;AAEE,wBAAA,EAAE,EAAC,GAFL;AAGE,wBAAA,CAAC,EAAC,GAHJ;AAIE,wBAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAWE;AAAM,oBAAA,SAAS,EAAC,qCAAhB;AAAA,2CACE;AAAK,sBAAA,KAAK,EAAC,IAAX;AAAgB,sBAAA,MAAM,EAAC,IAAvB;AAAA,6CACE;AACE,wBAAA,EAAE,EAAC,GADL;AAEE,wBAAA,EAAE,EAAC,GAFL;AAGE,wBAAA,CAAC,EAAC,GAHJ;AAIE,wBAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAXF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADQ,GAwBR;AAzBJ;AAAA;AAAA;AAAA;AAAA,sBADF,eA6BE;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,0BAAuBD;AAAvB;AAAA;AAAA;AAAA;AAAA,sBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAkCE;AAAK,YAAA,SAAS,EAAC,+BAAf;AAAA,oCACE;AAAA,qCACE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,WAAW,EAAC,wBAFd;AAGE,gBAAA,KAAK,EAAEI,SAHT;AAIE,gBAAA,QAAQ,EAAGE,CAAD,IAAOD,YAAY,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ/B;AAKE,gBAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAK,cAAA,SAAS,EAAC,qDAAf;AAAA,qCACE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,SAAS,EAAC,sKAFZ;AAAA,wCAIE;AAAM,kBAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE;AACE,kBAAA,KAAK,EAAC,4BADR;AAEE,kBAAA,OAAO,EAAC,WAFV;AAGE,kBAAA,IAAI,EAAC,cAHP;AAIE,kBAAA,SAAS,EAAC,kCAJZ;AAAA,yCAME;AAAM,oBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAiEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,uOAFZ;AAKE,QAAA,WAAW,EAAE,MAAM;AACjBN,UAAAA,eAAe;AACfL,UAAAA,iBAAiB,CAACY,cAAlB,CAAiC;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAjC;AACD,SARH;AASE,QAAA,SAAS,EAAE,MAAM;AACfb,UAAAA,iBAAiB,CAACc,aAAlB;AACAN,UAAAA,YAAY,CAACL,UAAD,CAAZ;AACAE,UAAAA,eAAe;AAChB,SAbH;AAAA,gCAeE;AACE,UAAA,KAAK,EAAC,4BADR;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,OAAO,EAAC,WAHV;AAIE,UAAA,MAAM,EAAC,cAJT;AAKE,UAAA,SAAS,EAAC,oBALZ;AAAA,iCAOE;AACE,YAAA,aAAa,EAAC,OADhB;AAEE,YAAA,cAAc,EAAC,OAFjB;AAGE,YAAA,WAAW,EAAC,GAHd;AAIE,YAAA,CAAC,EAAC;AAJJ;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,gBAfF,eA6BE;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,oBACGD,SAAS,GAAG,kBAAH,GAAwB;AADpC;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuGD,CAvHD;;GAAMF,U;UAMAD,oB;;;KANAC,U;AAwHN,eAAeA,UAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\nconst Dictaphone = () => {\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition,\r\n  } = useSpeechRecognition();\r\n  if (transcript != \"\" && !listening) {\r\n    resetTranscript();\r\n  }\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Browser doesn't support speech recognition.</span>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div>\r\n            <div className=\"block\">\r\n              <div className=\"mb-2 italic text-gray-500 flex\">\r\n                <div>\r\n                  {listening ? (\r\n                    <div className=\"mb-5\">\r\n                      <span className=\"text-red-500 absolute \">\r\n                        <svg width=\"20\" height=\"20\">\r\n                          <circle\r\n                            cx=\"8\"\r\n                            cy=\"8\"\r\n                            r=\"8\"\r\n                            fill=\"currentColor\"\r\n                          ></circle>\r\n                        </svg>\r\n                      </span>\r\n                      <span className=\"animate-ping text-red-500 absolute \">\r\n                        <svg width=\"20\" height=\"20\">\r\n                          <circle\r\n                            cx=\"8\"\r\n                            cy=\"8\"\r\n                            r=\"8\"\r\n                            fill=\"currentColor\"\r\n                          ></circle>\r\n                        </svg>\r\n                      </span>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"ml-6\">{transcript}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"relative flex justify-between\">\r\n              <div>\r\n                <textarea\r\n                  type=\"text\"\r\n                  placeholder=\"Write your message ...\"\r\n                  value={inputText}\r\n                  onChange={(e) => setInputText(e.target.value)}\r\n                  className=\"border-none h-full w-full overflow-hidden focus:outline-none focus:placeholder-gray-400 text-gray-900 placeholder-gray-600 px-4 bg-gray-200 \"\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"absolute right-0 items-end inset-y-0 hidden sm:flex\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"inline-flex items-end justify-center rounded-md-none px-4 py-3 transition duration-100 ease-in-out text-white bg-neutral-600 hover:bg-neutral-400 focus:outline-none\"\r\n                >\r\n                  <span className=\"font-semibold\">Send</span>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    fill=\"currentColor\"\r\n                    className=\"h-4 w-4 ml-2 transform rotate-90\"\r\n                  >\r\n                    <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\"></path>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"inline-flex \r\n          w-full mt-4 items-center justify-center rounded-none px-4 py-3\r\n           active:bg-red-500 focus:ring focus:ring-red-300 transition duration-100 ease-in-out text-white bg-neutral-600 hover:bg-neutral-400 focus:outline-none\"\r\n          onMouseDown={() => {\r\n            resetTranscript();\r\n            SpeechRecognition.startListening({ continuous: true });\r\n          }}\r\n          onMouseUp={() => {\r\n            SpeechRecognition.stopListening();\r\n            setInputText(transcript);\r\n            resetTranscript();\r\n          }}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            className=\"h-6 w-6 text-white\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\r\n            ></path>\r\n          </svg>\r\n          <span className=\"font-semibold\">\r\n            {listening ? \"Listening . . . \" : \"Press to talk\"}\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dictaphone;\r\n\r\n/*\r\n<div>\r\n          <p>Microphone: {listening ? \"on\" : \"off\"}</p>\r\n          <p>Message: {transcript}</p>\r\n          <button onClick={SpeechRecognition.startListening}>Start</button>\r\n          <button onClick={SpeechRecognition.stopListening}>Stop</button>\r\n          <button onClick={resetTranscript}>Reset</button>\r\n        </div>*/\r\n"]},"metadata":{},"sourceType":"module"}