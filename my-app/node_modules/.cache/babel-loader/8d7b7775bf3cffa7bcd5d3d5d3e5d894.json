{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phili\\\\OneDrive\\\\Dokumenter\\\\VHF-OpenAI\\\\my-app\\\\src\\\\Comp\\\\dic.jsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nconst Messages = _ref => {\n  _s();\n\n  let {\n    messages\n  } = _ref;\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messagesWrapper\",\n    children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: message\n    }, message, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Messages, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n\n_c = Messages;\n\nconst Dictaphone = () => {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const Test = () => {\n    _s2();\n\n    let testOpenAIdata = {\n      id: \"cmpl-5Acpm8FFFtPYDC7gYl0LBy1ztc91a\",\n      object: \"text_completion\",\n      created: 1653214242,\n      model: \"text-davinci-002\",\n      choices: [{\n        text: \"?\\nAI: I have no intention.\",\n        index: 0,\n        logprobs: null,\n        finish_reason: \"stop\"\n      }]\n    };\n    const [messages2, setMessages2] = useState([]); ///here is the test message from Open AI\n\n    setMessages2(testOpenAIdata);\n    console.log(messages2);\n  };\n\n  _s2(Test, \"DnHSx/kTJO1dtRoqCI8r6PdiIiM=\");\n\n  Test();\n  const [messages, setMessages] = useState([]);\n\n  const addMessages = () => {\n    setMessages(m => [...m, uuidv1()]);\n  };\n\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n  if (transcript !== \"\" && !listening) {\n    resetTranscript();\n  }\n\n  const [inputText, setInputText] = useState(\"\");\n\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n\n  let content = \"Your name is Automat Express. You are the mind of an autonomous ship sailing at sea. You are meeting my ship which I am steering. I am on your starboard side. To avoid collision, you have decided to let me go first by slowing down.\\n\\nHuman: Automat Express, come in.\\nAI: This is Automat Express. I'm receiving you.\\nHuman:\";\n\n  async function makeGetRequest() {\n    let header = {\n      headers: {\n        Authorization: `Bearer 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`\n      }\n    };\n    let payload = {\n      prompt: content + \" \" + inputText,\n      temperature: 0.5,\n      max_tokens: 150,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0.6,\n      stop: [\" Human:\", \" AI:\"]\n    };\n    let res = await axios.post(\"https://api.openai.com/v1/engines/text-davinci-002/completions\", payload, header);\n    let OpenAIdata = res.data;\n    console.log(OpenAIdata);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col h-44 overflow-scroll mt-4\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Messages, {\n                messages: messages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"addButton\",\n              onClick: addMessages,\n              children: \"Add message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2 italic text-gray-500 flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: listening ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-5\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-red-500 absolute \",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"20\",\n                      height: \"20\",\n                      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"8\",\n                        cy: \"8\",\n                        r: \"8\",\n                        fill: \"currentColor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"animate-ping text-red-500 absolute \",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"20\",\n                      height: \"20\",\n                      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n                        cx: \"8\",\n                        cy: \"8\",\n                        r: \"8\",\n                        fill: \"currentColor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this) : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-6\",\n                children: transcript\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"inputMessage\",\n                type: \"text\",\n                placeholder: \"Write a message ... \",\n                value: inputText,\n                onChange: e => setInputText(e.target.value),\n                className: \"border-none py-3 resize-none h-full w-full overflow-visible focus:outline-none focus:placeholder-gray-400 text-gray-900 placeholder-gray-600 px-4 bg-gray-200 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-full items-end inset-y-0 hidden sm:flex\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"inline-flex items-end justify-center rounded-md-none px-4 py-8 transition duration-100 ease-in-out text-white bg-neutral-600 hover:bg-neutral-400 focus:outline-none\",\n                onClick: e => {\n                  e.preventDefault();\n                  resetTranscript();\n                  setInputText(\"\");\n                  addMessages();\n                  makeGetRequest(); //REQUEST REQUEST\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-semibold\",\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  viewBox: \"0 0 20 20\",\n                  fill: \"currentColor\",\n                  className: \"h-4 w-4 ml-2 transform rotate-90\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"inline-flex \\r w-full mt-4 items-center justify-center rounded-none px-4 py-3\\r active:bg-red-500 focus:ring focus:ring-red-300 transition duration-100 ease-in-out text-white bg-neutral-600 hover:bg-neutral-400 focus:outline-none\",\n        onMouseDown: () => {\n          resetTranscript();\n          SpeechRecognition.startListening({\n            continuous: true\n          });\n        },\n        onMouseUp: () => {\n          SpeechRecognition.stopListening();\n          setInputText(transcript);\n          resetTranscript();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          className: \"h-6 w-6 text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: \"2\",\n            d: \"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: listening ? \"Listening . . . \" : \"Press to talk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(Dictaphone, \"uAaIfLttT0s5TctE785UmObbca4=\", false, function () {\n  return [useSpeechRecognition];\n});\n\n_c2 = Dictaphone;\nexport default Dictaphone;\n/*\r\n<div>\r\n          <p>Microphone: {listening ? \"on\" : \"off\"}</p>\r\n          <p>Message: {transcript}</p>\r\n          <button onClick={SpeechRecognition.startListening}>Start</button>\r\n          <button onClick={SpeechRecognition.stopListening}>Stop</button>\r\n          <button onClick={resetTranscript}>Reset</button>\r\n        </div>*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Messages\");\n$RefreshReg$(_c2, \"Dictaphone\");","map":{"version":3,"sources":["C:/Users/phili/OneDrive/Dokumenter/VHF-OpenAI/my-app/src/Comp/dic.jsx"],"names":["React","useState","useEffect","useRef","SpeechRecognition","useSpeechRecognition","v1","uuidv1","axios","require","Messages","messages","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","map","message","Dictaphone","Test","testOpenAIdata","id","object","created","model","choices","text","index","logprobs","finish_reason","messages2","setMessages2","console","log","setMessages","addMessages","m","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","inputText","setInputText","content","makeGetRequest","header","headers","Authorization","payload","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","stop","res","post","OpenAIdata","data","e","target","value","preventDefault","startListening","continuous","stopListening"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst Messages = ({ messages }) => {\r\n  const messagesEndRef = useRef(null);\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  return (\r\n    <div className=\"messagesWrapper\">\r\n      {messages.map((message) => (\r\n        <span key={message}>{message}</span>\r\n      ))}\r\n      <div ref={messagesEndRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Dictaphone = () => {\r\n  const Test = () => {\r\n    let testOpenAIdata = {\r\n      id: \"cmpl-5Acpm8FFFtPYDC7gYl0LBy1ztc91a\",\r\n      object: \"text_completion\",\r\n      created: 1653214242,\r\n      model: \"text-davinci-002\",\r\n      choices: [\r\n        {\r\n          text: \"?\\nAI: I have no intention.\",\r\n          index: 0,\r\n          logprobs: null,\r\n          finish_reason: \"stop\",\r\n        },\r\n      ],\r\n    };\r\n    const [messages2, setMessages2] = useState([]); ///here is the test message from Open AI\r\n    setMessages2(testOpenAIdata);\r\n    console.log(messages2);\r\n  };\r\n  Test();\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const addMessages = () => {\r\n    setMessages((m) => [...m, uuidv1()]);\r\n  };\r\n\r\n  const {\r\n    transcript,\r\n    listening,\r\n    resetTranscript,\r\n    browserSupportsSpeechRecognition,\r\n  } = useSpeechRecognition();\r\n  if (transcript !== \"\" && !listening) {\r\n    resetTranscript();\r\n  }\r\n  const [inputText, setInputText] = useState(\"\");\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <span>Browser doesn't support speech recognition.</span>;\r\n  }\r\n\r\n  let content =\r\n    \"Your name is Automat Express. You are the mind of an autonomous ship sailing at sea. You are meeting my ship which I am steering. I am on your starboard side. To avoid collision, you have decided to let me go first by slowing down.\\n\\nHuman: Automat Express, come in.\\nAI: This is Automat Express. I'm receiving you.\\nHuman:\";\r\n\r\n  async function makeGetRequest() {\r\n    let header = {\r\n      headers: {\r\n        Authorization: `Bearer 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`,\r\n      },\r\n    };\r\n    let payload = {\r\n      prompt: content + \" \" + inputText,\r\n      temperature: 0.5,\r\n      max_tokens: 150,\r\n      top_p: 1,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0.6,\r\n      stop: [\" Human:\", \" AI:\"],\r\n    };\r\n\r\n    let res = await axios.post(\r\n      \"https://api.openai.com/v1/engines/text-davinci-002/completions\",\r\n      payload,\r\n      header\r\n    );\r\n\r\n    let OpenAIdata = res.data;\r\n    console.log(OpenAIdata);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <div>\r\n            <div className=\"block\">\r\n              <div className=\"flex flex-col h-44 overflow-scroll mt-4\">\r\n                {\" \"}\r\n                <Messages messages={messages} />\r\n              </div>\r\n\r\n              <button className=\"addButton\" onClick={addMessages}>\r\n                Add message\r\n              </button>\r\n              <div className=\"mb-2 italic text-gray-500 flex\">\r\n                <div>\r\n                  {listening ? (\r\n                    <div className=\"mb-5\">\r\n                      <span className=\"text-red-500 absolute \">\r\n                        <svg width=\"20\" height=\"20\">\r\n                          <circle\r\n                            cx=\"8\"\r\n                            cy=\"8\"\r\n                            r=\"8\"\r\n                            fill=\"currentColor\"\r\n                          ></circle>\r\n                        </svg>\r\n                      </span>\r\n                      <span className=\"animate-ping text-red-500 absolute \">\r\n                        <svg width=\"20\" height=\"20\">\r\n                          <circle\r\n                            cx=\"8\"\r\n                            cy=\"8\"\r\n                            r=\"8\"\r\n                            fill=\"currentColor\"\r\n                          ></circle>\r\n                        </svg>\r\n                      </span>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"ml-6\">{transcript}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"relative flex justify-between\">\r\n              <div className=\"w-full\">\r\n                <textarea\r\n                  id=\"inputMessage\"\r\n                  type=\"text\"\r\n                  placeholder=\"Write a message ... \"\r\n                  value={inputText}\r\n                  onChange={(e) => setInputText(e.target.value)}\r\n                  className=\"border-none py-3 resize-none h-full w-full overflow-visible focus:outline-none focus:placeholder-gray-400 text-gray-900 placeholder-gray-600 px-4 bg-gray-200 \"\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"h-full items-end inset-y-0 hidden sm:flex\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"inline-flex items-end justify-center rounded-md-none px-4 py-8 transition duration-100 ease-in-out text-white bg-neutral-600 hover:bg-neutral-400 focus:outline-none\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    resetTranscript();\r\n                    setInputText(\"\");\r\n\r\n                    addMessages();\r\n                    makeGetRequest(); //REQUEST REQUEST\r\n                  }}\r\n                >\r\n                  <span className=\"font-semibold\">Send</span>\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    fill=\"currentColor\"\r\n                    className=\"h-4 w-4 ml-2 transform rotate-90\"\r\n                  >\r\n                    <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\"></path>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"inline-flex \r\n          w-full mt-4 items-center justify-center rounded-none px-4 py-3\r\n           active:bg-red-500 focus:ring focus:ring-red-300 transition duration-100 ease-in-out text-white bg-neutral-600 hover:bg-neutral-400 focus:outline-none\"\r\n          onMouseDown={() => {\r\n            resetTranscript();\r\n            SpeechRecognition.startListening({ continuous: true });\r\n          }}\r\n          onMouseUp={() => {\r\n            SpeechRecognition.stopListening();\r\n            setInputText(transcript);\r\n            resetTranscript();\r\n          }}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            className=\"h-6 w-6 text-white\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\r\n            ></path>\r\n          </svg>\r\n          <span className=\"font-semibold\">\r\n            {listening ? \"Listening . . . \" : \"Press to talk\"}\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dictaphone;\r\n\r\n/*\r\n<div>\r\n          <p>Microphone: {listening ? \"on\" : \"off\"}</p>\r\n          <p>Message: {transcript}</p>\r\n          <button onClick={SpeechRecognition.startListening}>Start</button>\r\n          <button onClick={SpeechRecognition.stopListening}>Stop</button>\r\n          <button onClick={resetTranscript}>Reset</button>\r\n        </div>*/\r\n"]},"metadata":{},"sourceType":"module"}